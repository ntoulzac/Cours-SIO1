{"config": {"indexing": "full", "lang": ["en"], "min_search_length": 3, "prebuild_index": false, "separator": "[\\s\\-]+"}, "docs": [{"location": "", "text": "Programme du cours \u2693\ufe0e Partie math\u00e9matiques \u2693\ufe0e Bases de num\u00e9ration Introduction \u00e0 la logique Arithm\u00e9tique Langage ensembliste Alg\u00e8bres de Boole Partie algorithmique appliqu\u00e9e \u2693\ufe0e G\u00e9n\u00e9ralit\u00e9s sur les algorithmes Premiers pas en Python Fonctions, conditions et boucles Listes Tableaux \u00e0 deux dimensions Arithm\u00e9tique Probl\u00e8mes", "title": "Programme du cours"}, {"location": "#programme-du-cours", "text": "", "title": "Programme du cours"}, {"location": "#partie-mathematiques", "text": "Bases de num\u00e9ration Introduction \u00e0 la logique Arithm\u00e9tique Langage ensembliste Alg\u00e8bres de Boole", "title": "Partie math\u00e9matiques"}, {"location": "#partie-algorithmique-appliquee", "text": "G\u00e9n\u00e9ralit\u00e9s sur les algorithmes Premiers pas en Python Fonctions, conditions et boucles Listes Tableaux \u00e0 deux dimensions Arithm\u00e9tique Probl\u00e8mes", "title": "Partie algorithmique appliqu\u00e9e"}, {"location": "arith/", "text": "Arithm\u00e9tique \u2693\ufe0e", "title": "- Arithm\u00e9tique"}, {"location": "arith/#arithmetique", "text": "", "title": "Arithm\u00e9tique"}, {"location": "bases/", "text": "Bases de num\u00e9ration \u2693\ufe0e Repr\u00e9sentation de l'information \u2693\ufe0e Repr\u00e9sentation des entiers \u2693\ufe0e Base d\u00e9cimale (base 10) \u2693\ufe0e Les nombres tels que nous avons l\u2019habitude de les manipuler quotidiennement sont \u00e9crits en base 10. Exemple Le nombre \u00ab deux mille vingt-trois \u00bb, que nous \u00e9crivons \\(2023\\) , correspond \u00e0 : \\[2023 = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 3 \\times 1\\] c'est-\u00e0-dire : \\[2023 = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 3 \\times 10^0\\] On constate l\u2019importance du nombre 10 dans l\u2019\u00e9criture d\u00e9cimale du nombre \\(2023\\) . Remarque Les seules puissances de 10 utiles pour d\u00e9composer \\(2023\\) sont celles qui sont plus petites que \\(2023\\) , c\u2019est-\u00e0-dire les puissances jusqu\u2019\u00e0 \\(10^3\\) . Pour \u00e9crire un nombre en base 10, on a besoin de 10 chiffres : \\(0\\) , \\(1\\) , \\(2\\) , ..., \\(9\\) . Base binaire (base 2) \u2693\ufe0e Au lieu de d\u00e9composer le nombre \\(2023\\) suivant des puissances de 10, on peut le d\u00e9composer suivant des puissances de 2. \\(2^{10}\\) \\(2^9\\) \\(2^8\\) \\(2^7\\) \\(2^6\\) \\(2^5\\) \\(2^4\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1024\\) \\(512\\) \\(256\\) \\(128\\) \\(64\\) \\(32\\) \\(16\\) \\(8\\) \\(4\\) \\(2\\) \\(1\\) \\[2023 = 1024 + 512 + 256 + 128 + 64 + 32 + 4 + 2 + 1\\] c'est-\u00e0-dire : \\[2023 = 1 \\times 2^{10} + 1 \\times 2^9 + 1 \\times 2^8 + 1 \\times 2^7 + 1 \\times 2^6 + 1 \\times 2^5 + 0 \\times 2^4 + 0 \\times 2^3 + 1 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0\\] et on \u00e9crit donc : \\[2023 = (11111100111)_2\\] Exercice 2 : Conversions entre base 10 et base 2 De la base 10 vers la base 2 De la base 2 vers la base 10 Donner l'\u00e9criture binaire des nombres \\(48\\) , \\(189\\) et \\(1492\\) . Donner l'\u00e9criture d\u00e9cimale des nombres \\((110110)_2\\) , \\((10011000)_2\\) et \\((111111111)_2\\) . Nous allons voir maintenant une m\u00e9thode applicable dans tous les cas pour passer de la base 10 \u00e0 la base 2. Passage de l'\u00e9criture d\u00e9cimale \u00e0 l'\u00e9criture binaire d'un entier On effectue des divisions euclidiennes successives par \\(2\\) jusqu\u2019\u00e0 ce que le quotient obtenu soit \\(0\\) . On prend ensuite les restes obtenus en partant du dernier. Exemple Retrouvons l'\u00e9criture binaire du nombre \\(2023\\) . \\(2023 = 2 \\times 1011 + 1\\) : Le quotient est \\(1011\\) , le reste est \\(1\\) . On recommence avec le nombre \\(1011\\) . \\(1011 = 2 \\times 505 + 1\\) : Le quotient est \\(505\\) , le reste est \\(1\\) . On recommence avec le nombre \\(505\\) . \\(505 = 2 \\times 252 + 1\\) : Le quotient est \\(252\\) , le reste est \\(1\\) . On recommence avec le nombre \\(525\\) . \\(252 = 2 \\times 126 + 0\\) : Le quotient est \\(126\\) , le reste est \\(0\\) . On recommence avec le nombre \\(126\\) . \\(126 = 2 \\times 63 + 0\\) \\(63 = 2 \\times 31 + 1\\) \\(31 = 2 \\times 15 + 1\\) \\(15 = 2 \\times 7 + 1\\) \\(7 = 2 \\times 3 + 1\\) \\(3 = 2 \\times 1 + 1\\) \\(1 = 2 \\times 0 + 1\\) : Le quotient est \\(0\\) , on s'arr\u00eate. En reprenant les restes \u00e0 partir du dernier, on obtient : \\[2023 = (11111100111)_2\\] Exercice 3 : Conversions de la base 10 vers la base 2 En appliquant la m\u00e9thode des divisions successives par \\(2\\) , donner l'\u00e9criture binaire des nombres \\(888\\) et \\(1793\\) . Remarque En base 2, on n\u2019utilise que deux chiffres : 0 et 1. Ils sont appel\u00e9s des bits. Cela rend la d\u00e9composition en base 2 tr\u00e8s utile du point de vue informatique. En revanche, avec seulement deux chiffres disponibles, la longueur de la d\u00e9composition en base 2 est plus grande qu\u2019en base 10. Base hexad\u00e9cimale (base 16) \u2693\ufe0e Une autre base \u00e0 conna\u00eetre est la base 16, qui est tr\u00e8s pratique puisque la taille des d\u00e9compositions y est quatre fois plus courte qu\u2019en binaire. Comme on a besoin de 16 chiffres, on utilise les caract\u00e8res \\(0\\) , \\(1\\) , \\(2\\) , ..., \\(9\\) , \\(A\\) , \\(B\\) , \\(C\\) , \\(D\\) , \\(E\\) et \\(F\\) , qui sont appel\u00e9s les chiffres hexad\u00e9cimaux. Le chiffre \\(A\\) est associ\u00e9 \u00e0 la valeur \\(10\\) , le chiffre \\(B\\) \u00e0 la valeur \\(11\\) , ..., le chiffre \\(F\\) \u00e0 la valeur \\(15\\) . Au lieu de d\u00e9composer le nombre suivant des puissances de 10 ou de 2, on le d\u00e9compose suivant des puissances de 16. \\(16^{3}\\) \\(16^{3}\\) \\(16^2\\) \\(16^1\\) \\(16^0\\) \\(65536\\) \\(4096\\) \\(256\\) \\(16\\) \\(1\\) \\[3243 = 12 \\times 256 + 10 \\times 16 + 11\\] c'est-\u00e0-dire : \\[3243 = 12 \\times 16^2 + 10 \\times 16^1 + 11 \\times 16^0\\] et on \u00e9crit donc : \\[3243 = (CAB)_{16}\\] Passage de la base 10 \u00e0 la base 16 On effectue des divisions euclidiennes successives par \\(16\\) jusqu\u2019\u00e0 ce que le quotient obtenu soit \\(0\\) . On prend ensuite les restes obtenus en partant du dernier, en rempla\u00e7ant \\(10\\) par \\(A\\) , \\(11\\) par \\(B\\) , etc. Exemple D\u00e9terminons l'\u00e9criture hexad\u00e9cimale du nombre \\(2024\\) . \\(2024 = 16 \\times 126 + 8\\) : Le quotient est \\(126\\) , le reste est \\(8\\) . On recommence avec le nombre \\(126\\) . \\(126 = 16 \\times 7 + 14\\) : Le quotient est \\(7\\) , le reste est \\(14\\) . On recommence avec le nombre \\(7\\) . \\(7 = 16 \\times 0 + 7\\) : Le quotient est \\(0\\) , on s'arr\u00eate. En reprenant les restes \u00e0 partir du dernier, on obtient : \\[2024 = (7E8)_{16}\\] Exercice 4 : Conversions de la base 10 vers la base 16 En appliquant la m\u00e9thode des divisions successives par \\(16\\) , donner l'\u00e9criture hexad\u00e9cimale des nombres \\(100\\) et \\(1515\\) . Changements directs d'\u00e9criture entre base 2 et base 16 \u2693\ufe0e Pour passer directement de la base 2 \u00e0 la base 16, ou inversement, il existe un tableau de conversion. bin \\(0000\\) \\(0001\\) \\(0010\\) \\(0011\\) \\(0100\\) \\(0101\\) \\(0110\\) \\(0111\\) \\(1000\\) \\(1001\\) \\(1010\\) \\(1011\\) \\(1100\\) \\(1101\\) \\(1110\\) \\(1111\\) hex \\(0\\) \\(1\\) \\(2\\) \\(3\\) \\(4\\) \\(5\\) \\(6\\) \\(7\\) \\(8\\) \\(9\\) \\(A\\) \\(B\\) \\(C\\) \\(D\\) \\(E\\) \\(F\\) Exemple Le nombre \\((2F8)_{16}\\) a pour \u00e9criture binaire \\((10\\ 1111\\ 1000)_2\\) . Le nombre \\((101\\ 1101\\ 0010\\ 0110\\ 1010)_2\\) a pour \u00e9critue hexad\u00e9cimale \\((5D26A)_{16}\\) . Remarque Les passages entre base 2 et base 16 sont simples car 16 est une puissance de 2. La repr\u00e9sentation en base 16 est quatre fois plus courte que la repr\u00e9sentation en base 2. Exercice 5 : Conversions entre base 2 et base 16 De la base 2 vers la base 16 De la base 16 vers la base 2 Donner l'\u00e9criture hexad\u00e9cimale des nombres \\((1100\\ 0110)_2\\) , \\((1\\ 1011\\ 0011)_2\\) et \\((1\\ 1001\\ 0111\\ 0100\\ 1011)_2\\) . Donner l'\u00e9criture binaire des nombres \\((AB)_{16}\\) , \\((60C)_{16}\\) et \\((4A03)_{16}\\) . Op\u00e9rations sur les entiers en binaire \u2693\ufe0e Addition \u2693\ufe0e Multiplication \u2693\ufe0e Soustraction \u2693\ufe0e Division \u2693\ufe0e Repr\u00e9sentation binaire des nombres r\u00e9els \u2693\ufe0e Cas des nombres strictement compris entre 0 et 1 \u2693\ufe0e Probl\u00e8me des arrondis \u2693\ufe0e Cas des nombres strictement sup\u00e9rieurs \u00e0 1 \u2693\ufe0e Multiplication ou division par une puissance de 2 \u2693\ufe0e Repr\u00e9sentation binaire des entiers sign\u00e9s \u2693\ufe0e", "title": "- Bases de num\u00e9ration"}, {"location": "bases/#bases-de-numeration", "text": "", "title": "Bases de num\u00e9ration"}, {"location": "bases/#representation-de-linformation", "text": "", "title": "Repr\u00e9sentation de l'information"}, {"location": "bases/#representation-des-entiers", "text": "", "title": "Repr\u00e9sentation des entiers"}, {"location": "bases/#base-decimale-base-10", "text": "Les nombres tels que nous avons l\u2019habitude de les manipuler quotidiennement sont \u00e9crits en base 10. Exemple Le nombre \u00ab deux mille vingt-trois \u00bb, que nous \u00e9crivons \\(2023\\) , correspond \u00e0 : \\[2023 = 2 \\times 1000 + 0 \\times 100 + 2 \\times 10 + 3 \\times 1\\] c'est-\u00e0-dire : \\[2023 = 2 \\times 10^3 + 0 \\times 10^2 + 2 \\times 10^1 + 3 \\times 10^0\\] On constate l\u2019importance du nombre 10 dans l\u2019\u00e9criture d\u00e9cimale du nombre \\(2023\\) . Remarque Les seules puissances de 10 utiles pour d\u00e9composer \\(2023\\) sont celles qui sont plus petites que \\(2023\\) , c\u2019est-\u00e0-dire les puissances jusqu\u2019\u00e0 \\(10^3\\) . Pour \u00e9crire un nombre en base 10, on a besoin de 10 chiffres : \\(0\\) , \\(1\\) , \\(2\\) , ..., \\(9\\) .", "title": "Base d\u00e9cimale (base 10)"}, {"location": "bases/#base-binaire-base-2", "text": "Au lieu de d\u00e9composer le nombre \\(2023\\) suivant des puissances de 10, on peut le d\u00e9composer suivant des puissances de 2. \\(2^{10}\\) \\(2^9\\) \\(2^8\\) \\(2^7\\) \\(2^6\\) \\(2^5\\) \\(2^4\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(1024\\) \\(512\\) \\(256\\) \\(128\\) \\(64\\) \\(32\\) \\(16\\) \\(8\\) \\(4\\) \\(2\\) \\(1\\) \\[2023 = 1024 + 512 + 256 + 128 + 64 + 32 + 4 + 2 + 1\\] c'est-\u00e0-dire : \\[2023 = 1 \\times 2^{10} + 1 \\times 2^9 + 1 \\times 2^8 + 1 \\times 2^7 + 1 \\times 2^6 + 1 \\times 2^5 + 0 \\times 2^4 + 0 \\times 2^3 + 1 \\times 2^2 + 1 \\times 2^1 + 1 \\times 2^0\\] et on \u00e9crit donc : \\[2023 = (11111100111)_2\\] Exercice 2 : Conversions entre base 10 et base 2 De la base 10 vers la base 2 De la base 2 vers la base 10 Donner l'\u00e9criture binaire des nombres \\(48\\) , \\(189\\) et \\(1492\\) . Donner l'\u00e9criture d\u00e9cimale des nombres \\((110110)_2\\) , \\((10011000)_2\\) et \\((111111111)_2\\) . Nous allons voir maintenant une m\u00e9thode applicable dans tous les cas pour passer de la base 10 \u00e0 la base 2. Passage de l'\u00e9criture d\u00e9cimale \u00e0 l'\u00e9criture binaire d'un entier On effectue des divisions euclidiennes successives par \\(2\\) jusqu\u2019\u00e0 ce que le quotient obtenu soit \\(0\\) . On prend ensuite les restes obtenus en partant du dernier. Exemple Retrouvons l'\u00e9criture binaire du nombre \\(2023\\) . \\(2023 = 2 \\times 1011 + 1\\) : Le quotient est \\(1011\\) , le reste est \\(1\\) . On recommence avec le nombre \\(1011\\) . \\(1011 = 2 \\times 505 + 1\\) : Le quotient est \\(505\\) , le reste est \\(1\\) . On recommence avec le nombre \\(505\\) . \\(505 = 2 \\times 252 + 1\\) : Le quotient est \\(252\\) , le reste est \\(1\\) . On recommence avec le nombre \\(525\\) . \\(252 = 2 \\times 126 + 0\\) : Le quotient est \\(126\\) , le reste est \\(0\\) . On recommence avec le nombre \\(126\\) . \\(126 = 2 \\times 63 + 0\\) \\(63 = 2 \\times 31 + 1\\) \\(31 = 2 \\times 15 + 1\\) \\(15 = 2 \\times 7 + 1\\) \\(7 = 2 \\times 3 + 1\\) \\(3 = 2 \\times 1 + 1\\) \\(1 = 2 \\times 0 + 1\\) : Le quotient est \\(0\\) , on s'arr\u00eate. En reprenant les restes \u00e0 partir du dernier, on obtient : \\[2023 = (11111100111)_2\\] Exercice 3 : Conversions de la base 10 vers la base 2 En appliquant la m\u00e9thode des divisions successives par \\(2\\) , donner l'\u00e9criture binaire des nombres \\(888\\) et \\(1793\\) . Remarque En base 2, on n\u2019utilise que deux chiffres : 0 et 1. Ils sont appel\u00e9s des bits. Cela rend la d\u00e9composition en base 2 tr\u00e8s utile du point de vue informatique. En revanche, avec seulement deux chiffres disponibles, la longueur de la d\u00e9composition en base 2 est plus grande qu\u2019en base 10.", "title": "Base binaire (base 2)"}, {"location": "bases/#base-hexadecimale-base-16", "text": "Une autre base \u00e0 conna\u00eetre est la base 16, qui est tr\u00e8s pratique puisque la taille des d\u00e9compositions y est quatre fois plus courte qu\u2019en binaire. Comme on a besoin de 16 chiffres, on utilise les caract\u00e8res \\(0\\) , \\(1\\) , \\(2\\) , ..., \\(9\\) , \\(A\\) , \\(B\\) , \\(C\\) , \\(D\\) , \\(E\\) et \\(F\\) , qui sont appel\u00e9s les chiffres hexad\u00e9cimaux. Le chiffre \\(A\\) est associ\u00e9 \u00e0 la valeur \\(10\\) , le chiffre \\(B\\) \u00e0 la valeur \\(11\\) , ..., le chiffre \\(F\\) \u00e0 la valeur \\(15\\) . Au lieu de d\u00e9composer le nombre suivant des puissances de 10 ou de 2, on le d\u00e9compose suivant des puissances de 16. \\(16^{3}\\) \\(16^{3}\\) \\(16^2\\) \\(16^1\\) \\(16^0\\) \\(65536\\) \\(4096\\) \\(256\\) \\(16\\) \\(1\\) \\[3243 = 12 \\times 256 + 10 \\times 16 + 11\\] c'est-\u00e0-dire : \\[3243 = 12 \\times 16^2 + 10 \\times 16^1 + 11 \\times 16^0\\] et on \u00e9crit donc : \\[3243 = (CAB)_{16}\\] Passage de la base 10 \u00e0 la base 16 On effectue des divisions euclidiennes successives par \\(16\\) jusqu\u2019\u00e0 ce que le quotient obtenu soit \\(0\\) . On prend ensuite les restes obtenus en partant du dernier, en rempla\u00e7ant \\(10\\) par \\(A\\) , \\(11\\) par \\(B\\) , etc. Exemple D\u00e9terminons l'\u00e9criture hexad\u00e9cimale du nombre \\(2024\\) . \\(2024 = 16 \\times 126 + 8\\) : Le quotient est \\(126\\) , le reste est \\(8\\) . On recommence avec le nombre \\(126\\) . \\(126 = 16 \\times 7 + 14\\) : Le quotient est \\(7\\) , le reste est \\(14\\) . On recommence avec le nombre \\(7\\) . \\(7 = 16 \\times 0 + 7\\) : Le quotient est \\(0\\) , on s'arr\u00eate. En reprenant les restes \u00e0 partir du dernier, on obtient : \\[2024 = (7E8)_{16}\\] Exercice 4 : Conversions de la base 10 vers la base 16 En appliquant la m\u00e9thode des divisions successives par \\(16\\) , donner l'\u00e9criture hexad\u00e9cimale des nombres \\(100\\) et \\(1515\\) .", "title": "Base hexad\u00e9cimale (base 16)"}, {"location": "bases/#changements-directs-decriture-entre-base-2-et-base-16", "text": "Pour passer directement de la base 2 \u00e0 la base 16, ou inversement, il existe un tableau de conversion. bin \\(0000\\) \\(0001\\) \\(0010\\) \\(0011\\) \\(0100\\) \\(0101\\) \\(0110\\) \\(0111\\) \\(1000\\) \\(1001\\) \\(1010\\) \\(1011\\) \\(1100\\) \\(1101\\) \\(1110\\) \\(1111\\) hex \\(0\\) \\(1\\) \\(2\\) \\(3\\) \\(4\\) \\(5\\) \\(6\\) \\(7\\) \\(8\\) \\(9\\) \\(A\\) \\(B\\) \\(C\\) \\(D\\) \\(E\\) \\(F\\) Exemple Le nombre \\((2F8)_{16}\\) a pour \u00e9criture binaire \\((10\\ 1111\\ 1000)_2\\) . Le nombre \\((101\\ 1101\\ 0010\\ 0110\\ 1010)_2\\) a pour \u00e9critue hexad\u00e9cimale \\((5D26A)_{16}\\) . Remarque Les passages entre base 2 et base 16 sont simples car 16 est une puissance de 2. La repr\u00e9sentation en base 16 est quatre fois plus courte que la repr\u00e9sentation en base 2. Exercice 5 : Conversions entre base 2 et base 16 De la base 2 vers la base 16 De la base 16 vers la base 2 Donner l'\u00e9criture hexad\u00e9cimale des nombres \\((1100\\ 0110)_2\\) , \\((1\\ 1011\\ 0011)_2\\) et \\((1\\ 1001\\ 0111\\ 0100\\ 1011)_2\\) . Donner l'\u00e9criture binaire des nombres \\((AB)_{16}\\) , \\((60C)_{16}\\) et \\((4A03)_{16}\\) .", "title": "Changements directs d'\u00e9criture entre base 2 et base 16"}, {"location": "bases/#operations-sur-les-entiers-en-binaire", "text": "", "title": "Op\u00e9rations sur les entiers en binaire"}, {"location": "bases/#addition", "text": "", "title": "Addition"}, {"location": "bases/#multiplication", "text": "", "title": "Multiplication"}, {"location": "bases/#soustraction", "text": "", "title": "Soustraction"}, {"location": "bases/#division", "text": "", "title": "Division"}, {"location": "bases/#representation-binaire-des-nombres-reels", "text": "", "title": "Repr\u00e9sentation binaire des nombres r\u00e9els"}, {"location": "bases/#cas-des-nombres-strictement-compris-entre-0-et-1", "text": "", "title": "Cas des nombres strictement compris entre 0 et 1"}, {"location": "bases/#probleme-des-arrondis", "text": "", "title": "Probl\u00e8me des arrondis"}, {"location": "bases/#cas-des-nombres-strictement-superieurs-a-1", "text": "", "title": "Cas des nombres strictement sup\u00e9rieurs \u00e0 1"}, {"location": "bases/#multiplication-ou-division-par-une-puissance-de-2", "text": "", "title": "Multiplication ou division par une puissance de 2"}, {"location": "bases/#representation-binaire-des-entiers-signes", "text": "", "title": "Repr\u00e9sentation binaire des entiers sign\u00e9s"}, {"location": "boole/", "text": "Alg\u00e8bres de Boole \u2693\ufe0e", "title": "- Alg\u00e8bres de Boole"}, {"location": "boole/#algebres-de-boole", "text": "", "title": "Alg\u00e8bres de Boole"}, {"location": "ensembles/", "text": "Langage ensembliste \u2693\ufe0e", "title": "- Langage ensembliste"}, {"location": "ensembles/#langage-ensembliste", "text": "", "title": "Langage ensembliste"}, {"location": "exemple_pyodide/", "text": "Bases de num\u00e9ration \u2693\ufe0e On peut avoir un IDE avec un fichier Python pr\u00e9charg\u00e9. Avec un fichier exemple.py qui se trouve dans le m\u00eame dossier que votre page.md \u00e0 cr\u00e9er. On ajoute une ligne avec {{ IDE('script_moyenne') }} Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def moyenne(valeurs):bksl-nl return sum(valeurs) / len(valeurs)bksl-nl A Z Pour de plus amples informations, le travail de Vincent Bouillot est pr\u00e9sent\u00e9 ici : https://bouillotvincent.gitlab.io/pyodide-mkdocs/", "title": "Bases de num\u00e9ration"}, {"location": "exemple_pyodide/#bases-de-numeration", "text": "On peut avoir un IDE avec un fichier Python pr\u00e9charg\u00e9. Avec un fichier exemple.py qui se trouve dans le m\u00eame dossier que votre page.md \u00e0 cr\u00e9er. On ajoute une ligne avec {{ IDE('script_moyenne') }} Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def moyenne(valeurs):bksl-nl return sum(valeurs) / len(valeurs)bksl-nl A Z Pour de plus amples informations, le travail de Vincent Bouillot est pr\u00e9sent\u00e9 ici : https://bouillotvincent.gitlab.io/pyodide-mkdocs/", "title": "Bases de num\u00e9ration"}, {"location": "fonc/", "text": "Fonctions, conditions et boucles \u2693\ufe0e", "title": "- Fonctions, conditions et boucles"}, {"location": "fonc/#fonctions-conditions-et-boucles", "text": "", "title": "Fonctions, conditions et boucles"}, {"location": "gen_algo/", "text": "G\u00e9n\u00e9ralit\u00e9s sur les algorithmes \u2693\ufe0e", "title": "- G\u00e9n\u00e9ralit\u00e9s sur les algorithmes"}, {"location": "gen_algo/#generalites-sur-les-algorithmes", "text": "", "title": "G\u00e9n\u00e9ralit\u00e9s sur les algorithmes"}, {"location": "index_algo/", "text": "Partie algorithmique \u2693\ufe0e", "title": "B. Algorithmique"}, {"location": "index_algo/#partie-algorithmique", "text": "", "title": "Partie algorithmique"}, {"location": "index_maths/", "text": "Partie math\u00e9matiques \u2693\ufe0e", "title": "A. Math\u00e9matiques"}, {"location": "index_maths/#partie-mathematiques", "text": "", "title": "Partie math\u00e9matiques"}, {"location": "listes/", "text": "Listes \u2693\ufe0e", "title": "- Listes"}, {"location": "listes/#listes", "text": "", "title": "Listes"}, {"location": "logique/", "text": "Introduction \u00e0 la logique \u2693\ufe0e", "title": "- Introduction \u00e0 la logique"}, {"location": "logique/#introduction-a-la-logique", "text": "", "title": "Introduction \u00e0 la logique"}, {"location": "premiers_pas/", "text": "Premiers pas en Python \u2693\ufe0e", "title": "- Premiers pas en Python"}, {"location": "premiers_pas/#premiers-pas-en-python", "text": "", "title": "Premiers pas en Python"}, {"location": "problemes/", "text": "Probl\u00e8mes \u2693\ufe0e", "title": "- Probl\u00e8mes"}, {"location": "problemes/#problemes", "text": "", "title": "Probl\u00e8mes"}, {"location": "tableaux/", "text": "Tableaux \u00e0 deux dimensions \u2693\ufe0e", "title": "- Tableaux \u00e0 deux dimensions"}, {"location": "tableaux/#tableaux-a-deux-dimensions", "text": "", "title": "Tableaux \u00e0 deux dimensions"}]}